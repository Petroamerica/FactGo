/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemafe;

import Datos.Datos;
import Logica.RestToken;
import LogicaSql.LogAdminCdr;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.awt.Cursor;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ScheduledFuture;
import static java.util.concurrent.TimeUnit.SECONDS;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;
import static sistemafe.FrameEnviar.FechaEnvioSis;
import LogicaSql.LogAdminCdr;

/**
 *
 * @author kbarreda
 */
public class FrameAdminCdr extends javax.swing.JFrame {

    public static String bdCia = "";
    public static String bdTicket = "";
    public static String bdTipoDoc = "";
    public static String bdSerie = "";
    public static String bdNroDoc = "";
    public static String bdSerieNro = "";
    public static String bdPlanta = "";

    public static String FechaCdrSis = "";
    public static String HoraCdrSis = "";
    Date myDate = new Date();

    public static int LogTex = 0;
    public static ArrayList<Doc> ListCdr = new ArrayList<Doc>();
    public static List<String> ListCdrCia = new ArrayList<>();
    public static List<String> ListCdrPlanta = new ArrayList<>();
    public static List<String> ListCdrCompro = new ArrayList<>();
    public static List<String> ListCdrRespu = new ArrayList<>();
    private final ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);

    /**
     * Creates new form FrameLogin
     */
    public FrameAdminCdr() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(300, 130));
        setMinimumSize(new java.awt.Dimension(830, 470));
        setUndecorated(true);
        setSize(new java.awt.Dimension(830, 470));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(33, 63, 86));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setBackground(new java.awt.Color(16, 54, 80));
        jLabel4.setFont(new java.awt.Font("BrowalliaUPC", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_Dog_House_52px_1.png"))); // NOI18N
        jLabel4.setText(" Volver al menu ");
        jLabel4.setToolTipText("");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 200, -1));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 210, 10));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_In_Progress_52px_1cdr.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 80, 70));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 240, 10));
        jPanel1.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 240, 10));

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Fecha        :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 80, -1));

        jLabel3.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Última Validación");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 200, -1));

        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 120, 20));

        jLabel6.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Hora         :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 80, -1));
        jPanel1.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 430, 240, 10));
        jPanel1.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 210, 10));

        jLabel7.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Cantidad   :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 80, -1));

        jLabel8.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, 120, 20));

        jLabel9.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 120, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 470));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(7, 43, 71));
        jButton1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Iniciar");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 50, 130, 30));

        jLabel11.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(7, 43, 71));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Validación de CDR de comprobantes enviados");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 380, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "Cia", "Planta", "Comprobante", "Respuesta"
            }
        ));
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(45);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(45);
            jTable1.getColumnModel().getColumn(1).setMinWidth(30);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(30);
            jTable1.getColumnModel().getColumn(2).setMinWidth(45);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(45);
            jTable1.getColumnModel().getColumn(3).setMinWidth(110);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(110);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 590, 390));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 590, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        javax.swing.JOptionPane.showMessageDialog(this, "Comenzar validaciones...");
         TimerTask timerTask = new TimerTask() {
            public void run() {
                try {
                    try {
                        jPanel2.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                        LogAdminCdr.GenerarListaCdr();
                        EJECUTAR();
                        jPanel2.setCursor(new Cursor(Cursor.HAND_CURSOR));
                    } catch (Exception ex) {
                        Logger.getLogger(FrameAdminCdr.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(FrameAdminCdr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }; 
        Timer timer = new Timer(); 
        timer.scheduleAtFixedRate(timerTask, 0, 600000);
        
       
/*
        try {
            jPanel2.setCursor(new Cursor(Cursor.WAIT_ CURSOR));
            LogAdminCdr.GenerarListaCdr();
            EJECUTAR();
            jPanel2.setCursor(new Cursor(Cursor.HAND_CURSOR));
        } catch (Exception ex) {
            Logger.getLogger(FrameAdminCdr.class.getName()).log(Level.SEVERE, null, ex);
        }

        final Runnable beeper = new Runnable() {
            public void run() {

                try {
                    jPanel2.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                    LogAdminCdr.GenerarListaCdr();
                    EJECUTAR();
                    jPanel2.setCursor(new Cursor(Cursor.HAND_CURSOR));
                } catch (Exception ex) {
                    Logger.getLogger(FrameAdminCdr.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
        final ScheduledFuture<?> beeperHandle
                = scheduler.scheduleAtFixedRate(beeper, 20, 20, SECONDS);
        scheduler.schedule(new Runnable() {
            public void run() {
                beeperHandle.cancel(true);
            }
        }, 60 * 60, SECONDS);*/

    }//GEN-LAST:event_jButton1MouseClicked
    void EJECUTAR() throws Exception {
        Removerinsertablasa();
        jLabel5.setText("");
        jLabel9.setText("");
        jLabel8.setText("");
        int indiceArreglo = 0;
        int nNumArchivos2 = 1;
        int nNumArchivos = traeCantidadArchivos();
        String[] archivos_xml = new String[nNumArchivos + 1];
        archivos_xml = traeListaArchivos();
        //int contador = 0;
        while (nNumArchivos2 <= nNumArchivos) {
            //contador++;
            String Dat = archivos_xml[indiceArreglo];
            ConsultarCDR(Dat);
            String ss = Dat.substring(41, 54);
            //jTextArea1.append("✔ " + contador + ": " + ss + "\n");
            //System.out.println("STATUS CODE: " + Dat);
            indiceArreglo++;
            nNumArchivos2++;
        }
        LogAdminCdr.ObtenerFechaHoraSQL();
        jLabel5.setText(FechaCdrSis);
        jLabel9.setText(HoraCdrSis);
        jLabel8.setText(Integer.toString(nNumArchivos));
        NewJFrameinsertablasa();

    }
    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        FrameMenu abrir = new FrameMenu();
        abrir.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel4MouseClicked
    
    
    public static int traeCantidadArchivos() {
        int nNumArchivos = 0;
        try {
            FileReader fr = new FileReader(Datos.RutaCdr);
            BufferedReader br = new BufferedReader(fr);
            while (br.readLine() != null) {
                nNumArchivos++;
            }
            br.close();
        } catch (Exception ex) {
        }

        return nNumArchivos;
    }

    public static String[] traeListaArchivos() {
        int indiceArreglo = 0;
        String[] archivos_xml = new String[traeCantidadArchivos() + 1];

        try {
            FileReader fr = new FileReader(Datos.RutaCdr);
            BufferedReader br = new BufferedReader(fr);
            while ((archivos_xml[indiceArreglo] = br.readLine()) != null) {
                indiceArreglo++;
            }
            br.close();
        } catch (Exception ex) {
        }

        return archivos_xml;
    }

    public void ConsultarCDR(String DatosConsulta) throws UnsupportedEncodingException, IOException, SQLException {
        int statusHttpget = 0;
        LogTex = DatosConsulta.length();
        bdCia = DatosConsulta.substring(1, 3);
        bdTicket = DatosConsulta.substring(3, 39);
        bdTipoDoc = DatosConsulta.substring(39, 42);
        bdSerie = DatosConsulta.substring(42, 46);
        bdNroDoc = DatosConsulta.substring(46, 54);
        if (LogTex == 57) {
            bdPlanta = DatosConsulta.substring(54, 56);
        } else {
            bdPlanta = DatosConsulta.substring(54, 57);
        }
        System.out.println(LogTex + " # " + bdCia + " # " + bdTicket + " # " + bdTipoDoc + " # " + bdSerie + " # " + bdNroDoc + " # " + bdPlanta);
        String TipoDocDescri = "";
        if ("FAC".equals(bdTipoDoc)) {
            TipoDocDescri = "Factura";
        } else if ("BOL".equals(bdTipoDoc)) {
            TipoDocDescri = "Boleta";
        } else if ("PER".equals(bdTipoDoc)) {
            TipoDocDescri = "Percepcion";
        } else if ("N-C".equals(bdTipoDoc)) {
            TipoDocDescri = "Nota de credito";
            bdTipoDoc="N/C";
        } else if ("N-D".equals(bdTipoDoc)) {
            TipoDocDescri = "Nota de debito";
            bdTipoDoc="N/D";
        } else {
            TipoDocDescri = bdTipoDoc;
        }

        bdSerieNro = (DatosConsulta.substring(39, 40) + DatosConsulta.substring(43, 46) + "-" + bdNroDoc);

        RestToken.ObtenerToken(bdCia);
        CloseableHttpClient httpclientCDR = HttpClients.createDefault();
        HttpGet httpCDR = new HttpGet(Datos.LinkRestCDR + bdTicket);
        httpCDR.setHeader("Authorization", "Bearer " + Datos.Dato_Token);
        HttpResponse responseHttpget = httpclientCDR.execute(httpCDR);
        statusHttpget = responseHttpget.getStatusLine().getStatusCode();
        // System.out.println("STATUS CODE: " + statusHttpget);
        String res = "";
        if (statusHttpget == 200) {
            res = "La " + TipoDocDescri + " " + bdSerieNro + " ha sido aceptada.";
            LogAdminCdr.UpdateCamposSunat(bdCia,"0", res, bdPlanta, bdSerie, bdNroDoc, bdTipoDoc);
        } else {
            CloseableHttpResponse responseDocumentCDR = httpclientCDR.execute(httpCDR);
            ObjectMapper mapperDocumentCDR = new ObjectMapper();
            JsonNode rootNodeTokerDocumentCDR = mapperDocumentCDR.readTree(EntityUtils.toString(responseDocumentCDR.getEntity()));
            String codeCRD = rootNodeTokerDocumentCDR.path("code").asText();
            String descriptionCDR = rootNodeTokerDocumentCDR.path("description").asText();
            LogAdminCdr.UpdateCamposSunat(bdCia,"1", descriptionCDR, bdPlanta, bdSerie, bdNroDoc, bdTipoDoc);
            res = descriptionCDR;
        }
        ListCdrCia.add(bdCia);
        ListCdrPlanta.add(bdPlanta);
        ListCdrCompro.add(bdSerieNro);
        ListCdrRespu.add(res);

    }

    public class Doc {

        public int id;
        public String ListCdrCia;
        public String ListCdrPlanta;
        public String ListCdrCompro;
        public String ListCdrRespu;

        public Doc(int Id, String ListCdrCia, String ListCdrPlanta, String ListCdrCompro, String ListCdrRespu) {
            this.id = Id;
            this.ListCdrCia = ListCdrCia;
            this.ListCdrPlanta = ListCdrPlanta;
            this.ListCdrCompro = ListCdrCompro;
            this.ListCdrRespu = ListCdrRespu;
        }
    }

    public ArrayList MetListErrores() {
        Integer IntFor = ListCdrPlanta.size();
        for (int factor = 1; factor <= IntFor; factor++) {
            Integer ds = factor - 1;
            Doc u1 = new Doc(factor, ListCdrCia.get(ds), ListCdrPlanta.get(ds), ListCdrCompro.get(ds), ListCdrRespu.get(ds));
            ListCdr.add(u1);
        }
        return ListCdr;
    }

    public void NewJFrameinsertablasa() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        ArrayList<Doc> list = MetListErrores();
        Object rowData[] = new Object[5];
        for (int i = 0; i < list.size(); i++) {
            rowData[0] = list.get(i).id;
            rowData[1] = list.get(i).ListCdrCia;
            rowData[2] = list.get(i).ListCdrPlanta;
            rowData[3] = list.get(i).ListCdrCompro;
            rowData[4] = list.get(i).ListCdrRespu;
            model.addRow(rowData);
        }
    }

    public void Removerinsertablasa() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            model.removeRow(i);
            i -= 1;
        }
        ListCdr.clear();
        ListCdrCia.clear();
        ListCdrPlanta.clear();
        ListCdrCompro.clear();
        ListCdrRespu.clear();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameAdminCdr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameAdminCdr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameAdminCdr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameAdminCdr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameAdminCdr().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
