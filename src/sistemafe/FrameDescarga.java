/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemafe;

import Logica.CellRenderer;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import Datos.Datos;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/**
 *
 * @author kbarreda
 */
public class FrameDescarga extends javax.swing.JFrame {

    /**
     * Creates new form FrameLogin
     */
    FrameLogin FL = new FrameLogin();
    Date StringFechaIni = null;
    Date StringFechaFin = null;

    public static List<String> ListDoc = new ArrayList();
    public static List<Integer> ListCod = new ArrayList();
    public static List<String> ListDes = new ArrayList();
    public static ArrayList<Doc> list = new ArrayList();

    public FrameDescarga() {
        initComponents();
        //setIconImage(new ImageIcon(getClass().getResource("/imagenes/icons8_Downloads_Folder_100px_1.png")).getImage());
        for (int i = 0; i < Datos.ListPlantas.size(); i++) {
            jComboBox1.addItem(Datos.ListPlantas.get(i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jTextField2 = new javax.swing.JTextField();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jComboBox3 = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(300, 130));
        setMinimumSize(new java.awt.Dimension(830, 470));
        setUndecorated(true);
        setSize(new java.awt.Dimension(830, 470));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 150, 30));

        jLabel8.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(28, 59, 89));
        jLabel8.setText("Planta           :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 100, 30));

        jLabel6.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(28, 59, 89));
        jLabel6.setText("Tipo Doc        :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 100, 30));

        jLabel7.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(28, 59, 89));
        jLabel7.setText("Id Cliente      :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 100, 30));

        jLabel9.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(28, 59, 89));
        jLabel9.setText("Fecha    De   :");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 110, 28));
        jPanel1.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 150, 30));

        jTextField2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 150, -1));
        jPanel1.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, 151, -1));

        jLabel10.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(28, 59, 89));
        jLabel10.setText("A  :");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 29, 28));

        jButton6.setBackground(new java.awt.Color(13, 56, 86));
        jButton6.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_Delete_Bin_48px_4.png"))); // NOI18N
        jButton6.setText(" Limpiar");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.setMaximumSize(new java.awt.Dimension(95, 32));
        jButton6.setMinimumSize(new java.awt.Dimension(95, 32));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 50, 120, 30));

        jButton4.setBackground(new java.awt.Color(13, 56, 86));
        jButton4.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_Downloads_Folder_20px.png"))); // NOI18N
        jButton4.setText(" Descargar");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, 120, 30));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NÂ°", "Documento", "Cod", "Estado Descarga"
            }
        ));
        jTable2.setShowHorizontalLines(true);
        jTable2.setShowVerticalLines(true);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setMaxWidth(35);
            jTable2.getColumnModel().getColumn(1).setMinWidth(100);
            jTable2.getColumnModel().getColumn(1).setMaxWidth(100);
            jTable2.getColumnModel().getColumn(2).setMaxWidth(40);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 590, 320));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Fac", "Bol", "N/C", "N/D" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 150, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 590, 470));

        jPanel3.setBackground(new java.awt.Color(33, 63, 86));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_Downloads_Folder_70px.png"))); // NOI18N
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, -1, -1));
        jPanel3.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 430, 240, 10));

        jLabel4.setBackground(new java.awt.Color(16, 54, 80));
        jLabel4.setFont(new java.awt.Font("BrowalliaUPC", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_Dog_House_52px_1.png"))); // NOI18N
        jLabel4.setText(" Inicio ");
        jLabel4.setToolTipText("");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 200, -1));

        jLabel3.setBackground(new java.awt.Color(16, 54, 80));
        jLabel3.setFont(new java.awt.Font("BrowalliaUPC", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_Email_Send_28px_1.png"))); // NOI18N
        jLabel3.setText(" Enviar Documentos ");
        jLabel3.setToolTipText("");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 200, -1));

        jLabel5.setBackground(new java.awt.Color(16, 54, 80));
        jLabel5.setFont(new java.awt.Font("BrowalliaUPC", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_Combo_Chart_25.png"))); // NOI18N
        jLabel5.setText(" Reporte Documentos");
        jLabel5.setToolTipText("");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 200, -1));
        jPanel3.add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 200, -1));
        jPanel3.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 240, 10));
        jPanel3.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 240, 10));
        jPanel3.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 240, 10));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        FrameMenu abrir = new FrameMenu();
        abrir.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        FrameEnviar abrir = new FrameEnviar();
        abrir.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        FrameReporte abrir = new FrameReporte();
        abrir.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        String Caracteres = jTextField2.getText();
        if (Caracteres.length() >= 6) {
            evt.consume();
        }
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
/*        borrar();*/

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        try {
            RecuperarDatos();
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(FrameDescarga.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SAXException ex) {
            Logger.getLogger(FrameDescarga.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FrameDescarga.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(FrameDescarga.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        /*timer = new Timer(10, new FrameDescarga.progreso());*/
    }//GEN-LAST:event_formWindowOpened
    public class Doc {

        public int id;
        public String FEdoc;
        public int FEcod;
        public String FEdes;

        public Doc(int Id, String FEdoc, int FEcod, String FEdes) {
            this.id = Id;
            this.FEdoc = FEdoc;
            this.FEcod = FEcod;
            this.FEdes = FEdes;
        }
    }

    public ArrayList MetListErrores() {
        Integer IntFor = ListDoc.size();

        for (int factor = 1; factor <= IntFor; factor++) {
            Integer ds = factor - 1;
            Doc u1 = new Doc(factor, ListDoc.get(ds), ListCod.get(ds), ListDes.get(ds));
            list.add(u1);
        }
        return list;
    }

    public void NewJFrameinsertablasa() {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        ArrayList<Doc> list = MetListErrores();
        Object rowData[] = new Object[4];
        for (int i = 0; i < list.size(); i++) {
            rowData[0] = list.get(i).id;
            rowData[1] = list.get(i).FEdoc;
            rowData[2] = list.get(i).FEcod;
            rowData[3] = list.get(i).FEdes;
            model.addRow(rowData);
        }

    }

    public void Removerinsertablasa() {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            model.removeRow(i);
            i -= 1;
        }

    }

    /**
     * @param table
     * @param args the command line arguments
     */
    public void setCellRender(JTable table) {
        Enumeration<TableColumn> en = table.getColumnModel().getColumns();
        while (en.hasMoreElements()) {
            TableColumn tc = en.nextElement();
            tc.setCellRenderer(new CellRenderer());
        }
    }

    public void RecuperarDatos() throws ParserConfigurationException, SAXException, IOException, ParseException {
     
        if (jComboBox1.getSelectedItem() == "-") {
            JOptionPane.showMessageDialog(null, "Seleccione Planta", "Confirmar", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (jComboBox3.getSelectedItem() == "-") {
                JOptionPane.showMessageDialog(null, "Seleccione Tipo Doc", "Confirmar", JOptionPane.INFORMATION_MESSAGE);
            } else {
                if ("".equals(jTextField2.getText())) {
                    JOptionPane.showMessageDialog(null, "Falta Id Cliente", "Confirmar", JOptionPane.INFORMATION_MESSAGE);
                } else {

                    if (jDateChooser1.getDate() == null) {
                        JOptionPane.showMessageDialog(null, "Falta Fecha Inicial", "Confirmar", JOptionPane.INFORMATION_MESSAGE);
                    } else {

                        if (jDateChooser2.getDate() == null) {
                            JOptionPane.showMessageDialog(null, "Falta Fecha Final", "Confirmar", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            String SIni = new SimpleDateFormat("dd/MM/yyyy").format(jDateChooser1.getDate());
                            String SFin = new SimpleDateFormat("dd/MM/yyyy").format(jDateChooser2.getDate());
                            SimpleDateFormat formateador = new SimpleDateFormat("dd/MM/yyyy");
                            StringFechaIni = formateador.parse(SIni);
                            StringFechaFin = formateador.parse(SFin);

                            if (StringFechaFin.before(StringFechaIni)) {
                                JOptionPane.showMessageDialog(null, "Fecha Fin no puede ser MENOR que Fecha Inicio", "Error", JOptionPane.INFORMATION_MESSAGE);
                            } else {
                                DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                                String ParamPlanta = (String) jComboBox1.getSelectedItem();
                                String ParamTipoDoc = (String) jComboBox3.getSelectedItem();
                                String ParamFechaIni = df.format(StringFechaIni);
                                String ParamFechaFin = df.format(StringFechaFin);
                                String ParamIdCliente = jTextField2.getText();
                                if (StringFechaIni.before(StringFechaFin)) {
                                  /*  try {
                                        borrar();
                                        JOptionPane.showMessageDialog(null, "Por favor espere...", "Confirmar", JOptionPane.INFORMATION_MESSAGE);
                                        EjecutarListaDocumentos(FrameLogin.FeCiaCod, ParamPlanta, ParamFechaIni, ParamFechaFin, ParamTipoDoc, ParamIdCliente);
                                        setCellRender(jTable2);
                                        NewJFrameinsertablasa();
                                    } catch (IOException ex) {
                                        Logger.getLogger(FrameDescarga.class.getName()).log(Level.SEVERE, null, ex);
                                    }

                                } else {
                                    try {
                                        borrar();
                                        JOptionPane.showMessageDialog(null, "Por favor espere...", "Confirmar", JOptionPane.INFORMATION_MESSAGE);
                                        EjecutarListaDocumentos(FrameLogin.FeCiaCod, ParamPlanta, ParamFechaIni, ParamFechaFin, ParamTipoDoc, ParamIdCliente);
                                        setCellRender(jTable2);
                                        NewJFrameinsertablasa();
                                    } catch (IOException ex) {
                                        Logger.getLogger(FrameDescarga.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }*/
                                timer.start();
                            }

                        }
                    }

                }

            }
        }
        
    }}
/*
    public void borrar() {
        list.clear();
        ListDes.clear();
        ListCod.clear();
        ListDoc.clear();
        Removerinsertablasa();
    }

    public static void EjecutarListaDocumentos(String Cia, String Planta, String FechaIni, String FechaFin, String TipoDoc, String IdCliente) throws IOException {
        CloseableHttpClient httpclientInsertToken = HttpClients.createDefault();
        HttpGet httpInsertToken = new HttpGet(Datosasdasd.LinkApiIP + "/Api/DescargaMasiva/" + Cia + "/" + Planta + "/" + FechaIni + "/" + FechaFin + "/" + TipoDoc + "/" + IdCliente);

        CloseableHttpResponse responseDocumentInsertToken = httpclientInsertToken.execute(httpInsertToken);
        ObjectMapper mapperDocumentInsertToken = new ObjectMapper();
        JsonNode rootNodeTokerDocumentInsertToken = mapperDocumentInsertToken.readTree(EntityUtils.toString(responseDocumentInsertToken.getEntity()));

        int NumberFor = rootNodeTokerDocumentInsertToken.size();
        String Sticket = "";
        String SserieNumero = "";
        if (NumberFor == 0) {
            JOptionPane.showMessageDialog(null, "No existen documentos para el cliente", "Â¡ AtenciÃ³n !", JOptionPane.ERROR_MESSAGE);
        } else {
            for (int i = 0; i < NumberFor; i++) {
                SserieNumero = rootNodeTokerDocumentInsertToken.get(i).findValue("Documento").asText();
                Sticket = rootNodeTokerDocumentInsertToken.get(i).findValue("TicketEfac").asText();
                System.out.println("SerieNro : " + SserieNumero + " " + Sticket);
                if (null == Cia) {
                    System.out.print("FrameDescarga: ERROR TOKEN");
                } else {
                    RestToken.ObtenerToken(Cia);
                }
                ObtenerPdf(Sticket, SserieNumero);

            }
            String direccion = null;
            direccion = Datosasdasd.RutaDescarga;
            File carpeta = new File(direccion);
            carpeta.mkdir();
            Runtime.getRuntime().exec("explorer " + carpeta.getAbsolutePath());
        }
    }

    public static void ObtenerPdf(String ticket, String Documento) throws FileNotFoundException, IOException {
        HttpGet httpgetPDF = new HttpGet(Datosasdasd.LinkRestPdf + ticket);
        httpgetPDF.setHeader("Authorization", "Bearer " + Datosasdasd.Dato_Token);
        CloseableHttpClient httpclientpPDF = HttpClients.createDefault();
        HttpResponse responsePDF = httpclientpPDF.execute(httpgetPDF);
        int statusPDF = responsePDF.getStatusLine().getStatusCode();
        String statuPDF = responsePDF.getStatusLine().getReasonPhrase();
        HttpEntity entityPDF = responsePDF.getEntity();

        System.out.println("STATUS CODE PDF: " + statusPDF);
        System.out.println("entityPDF: " + entityPDF);
        System.out.println("getReasonPhrase: " + statuPDF);
        ListDoc.add(Documento);
        ListCod.add(statusPDF);
        if (statusPDF == 200) {
            File myFilePDF = new File(Datosasdasd.RutaDescarga + Documento + ".word");
            if (entityPDF != null) {
                try (FileOutputStream outstreamPDF = new FileOutputStream(myFilePDF)) {
                    entityPDF.writeTo(outstreamPDF);
                }
            }

            ListDes.add("Documento Descargado Correctamente");
        } else {
            ListDes.add("! ERROR Â¡ " + statuPDF);
        }

    }

    public class progreso implements ActionListener {

        public void actionPerformed(ActionEvent evt) {
            int n = jProgressBar1.getValue();
            if (n < 100) {
                n++;
                jProgressBar1.setValue(n);
            } else {
                timer.stop();

                //JOptionPane.showMessageDialog(null, "Proceso terminado", "Â¡ Aviso !", JOptionPane.INFORMATION_MESSAGE);
            }

        }

    }
*/
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameDescarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameDescarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameDescarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameDescarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrameDescarga().setVisible(true);
        });
    }
    private Timer timer;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
